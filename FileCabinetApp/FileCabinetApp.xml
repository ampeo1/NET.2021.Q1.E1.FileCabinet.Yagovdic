<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FileCabinetApp</name>
    </assembly>
    <members>
        <member name="T:FileCabinetApp.Converter">
            <summary>
            This class converts data.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Converter.StringConverter(System.String)">
            <summary>
            Converts from string to string.
            </summary>
            <param name="str">String representation.</param>
            <returns>
            First argument: True if successfully transformed; otherwise false.
            Second argument: Error message if there is an error.
            Third argument: Converted value.
            </returns>
        </member>
        <member name="M:FileCabinetApp.Converter.DateConverter(System.String)">
            <summary>
            Converts from string to DateTime.
            </summary>
            <param name="str">String representation.</param>
            <returns>
            First argument: True if successfully transformed; otherwise false.
            Second argument: Error message if there is an error.
            Third argument: Converted value.
            </returns>
        </member>
        <member name="M:FileCabinetApp.Converter.CharConverted(System.String)">
            <summary>
            Converts from string to char.
            </summary>
            <param name="str">String representation.</param>
            <returns>
            First argument: True if successfully transformed; otherwise false.
            Second argument: Error message if there is an error.
            Third argument: Converted value.
            </returns>
        </member>
        <member name="T:FileCabinetApp.CustomValidator">
            <summary>
            This class does validate data.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.ValidateAccess(System.Char)">
            <summary>
            Validate access property.
            </summary>
            <param name="access">Checked argument.</param>
            <returns>
            First argument: True if successfully validated; otherwise false.
            Second argument: Error message if there is an error.
            </returns>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.ValidateDateOfBirth(System.DateTime)">
            <summary>
            Validate date of birth property.
            </summary>
            <param name="dateOfBirth">Checked argument.</param>
            <returns>
            First argument: True if successfully validated; otherwise false.
            Second argument: Error message if there is an error.
            </returns>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.ValidateFirstName(System.String)">
            <summary>
            Validate first name property.
            </summary>
            <param name="firstName">Checked argument.</param>
            <returns>
            First argument: True if successfully validated; otherwise false.
            Second argument: Error message if there is an error.
            </returns>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.ValidateLastName(System.String)">
            <summary>
            Validate last name property.
            </summary>
            <param name="lastName">Checked argument.</param>
            <returns>
            First argument: True if successfully validated; otherwise false.
            Second argument: Error message if there is an error.
            </returns>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.ValidateParameters(FileCabinetApp.DataRecord)">
            <summary>
            Validate all arguments.
            </summary>
            <param name="dataRecord">Checked arguments.</param>
            <exception cref="T:System.ArgumentNullException">Throws when <paramref name="dataRecord"/> is null.</exception>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.CheckResult(System.Tuple{System.Boolean,System.String})">
            <summary>
            Checks if validation was successful.
            </summary>
            <param name="resultValidation">Result of validation.</param>
            <exception cref="T:System.ArgumentException">Throws when validation failed.</exception>
        </member>
        <member name="T:FileCabinetApp.DataRecord">
            <summary>
            Introduce Parameter Object.
            </summary>
        </member>
        <member name="P:FileCabinetApp.DataRecord.Id">
            <summary>
            Gets or sets identifier.
            </summary>
            <value>
            Identifier.
            </value>
        </member>
        <member name="P:FileCabinetApp.DataRecord.FirstName">
            <summary>
            Gets or sets first name.
            </summary>
            <value>
            First name.
            </value>
        </member>
        <member name="P:FileCabinetApp.DataRecord.LastName">
            <summary>
            Gets or sets last name.
            </summary>
            <value>
            last name.
            </value>
        </member>
        <member name="P:FileCabinetApp.DataRecord.DateOfBirth">
            <summary>
            Gets or sets date of birth.
            </summary>
            <value>
            dd/MM/yyyy.
            </value>
        </member>
        <member name="P:FileCabinetApp.DataRecord.Access">
            <summary>
            Gets or sets access.
            </summary>
            <value>
            Access.
            </value>
        </member>
        <member name="T:FileCabinetApp.DefaultValidator">
            <summary>
            This class does validate data.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.ValidateAccess(System.Char)">
            <summary>
            Validate access property.
            </summary>
            <param name="access">Checked argument.</param>
            <returns>
            First argument: True if successfully validated; otherwise false.
            Second argument: Error message if there is an error.
            </returns>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.ValidateDateOfBirth(System.DateTime)">
            <summary>
            Validate date of birth property.
            </summary>
            <param name="dateOfBirth">Checked argument.</param>
            <returns>
            First argument: True if successfully validated; otherwise false.
            Second argument: Error message if there is an error.
            </returns>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.ValidateFirstName(System.String)">
            <summary>
            Validate first name property.
            </summary>
            <param name="firstName">Checked argument.</param>
            <returns>
            First argument: True if successfully validated; otherwise false.
            Second argument: Error message if there is an error.
            </returns>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.ValidateLastName(System.String)">
            <summary>
            Validate last name property.
            </summary>
            <param name="lastName">Checked argument.</param>
            <returns>
            First argument: True if successfully validated; otherwise false.
            Second argument: Error message if there is an error.
            </returns>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.ValidateParameters(FileCabinetApp.DataRecord)">
            <summary>
            Validate all arguments.
            </summary>
            <param name="dataRecord">Checked arguments.</param>
            <exception cref="T:System.ArgumentNullException">Throws when <paramref name="dataRecord"/> is null.</exception>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.CheckResult(System.Tuple{System.Boolean,System.String})">
            <summary>
            Checks if validation was successful.
            </summary>
            <param name="resultValidation">Result of validation.</param>
            <exception cref="T:System.ArgumentException">Throws when validation failed.</exception>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecord">
            <summary>
            Representation record in file cabinet.
            </summary>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Id">
            <summary>
            Gets or sets identifier.
            </summary>
            <value>
            Identifier.
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.FirstName">
            <summary>
            Gets or sets first name.
            </summary>
            <value>
            First name.
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.LastName">
            <summary>
            Gets or sets last name.
            </summary>
            <value>
            Last name.
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.DateOfBirth">
            <summary>
            Gets or sets date of birth.
            </summary>
            <value>
            Date of birth.
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Access">
            <summary>
            Gets or sets access.
            </summary>
            <value>
            Access.
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Age">
            <summary>
            Gets or sets age.
            </summary>
            <value>
            Age.
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.AmountRecords">
            <summary>
            Gets or sets amount records.
            </summary>
            <value>
            Amount records.
            </value>
        </member>
        <member name="T:FileCabinetApp.FileCabinetService">
            <summary>
            Representation file cabinet service.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.#ctor(FileCabinetApp.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetService"/> class.
            </summary>
            <param name="validator">validation-rules.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.CreateRecord(FileCabinetApp.DataRecord)">
            <summary>
            Creates new record.
            </summary>
            <param name="dataRecord">record data.</param>
            <exception cref="T:System.ArgumentNullException">Trows when <paramref name="dataRecord"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Trows when data is invalid.</exception>
            <returns>Record id.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.EditRecord(FileCabinetApp.DataRecord)">
            <summary>
            Changes record.
            </summary>
            <exception cref="T:System.ArgumentNullException">Trows when <paramref name="dataRecord"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Trows when data is invalid.</exception>
            <param name="dataRecord">Record data.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.FindIndexById(System.Int32)">
            <summary>
            Finds index record by id.
            </summary>
            <param name="id">Identifier of the searched record.</param>
            <exception cref="T:System.ArgumentException">Throws when record not found.</exception>
            <returns>Index record.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.FindByFirstName(System.String)">
            <summary>
            Finds record by first name.
            </summary>
            <param name="firstName">First name of the searched record.</param>
            <returns>Found records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.FindByLastname(System.String)">
            <summary>
            Finds record by last name.
            </summary>
            <param name="lastName">Last name of the searched record.</param>
            <returns>Found records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.FindByBirthDay(System.DateTime)">
            <summary>
            Finds record by date of birth.
            </summary>
            <param name="dateOfBirth">date of birth of the searched record.</param>
            <returns>Found records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.GetRecords">
            <summary>
            Gets all records.
            </summary>
            <returns>Records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.GetStat">
            <summary>
            Gets count of records.
            </summary>
            <returns>Count of records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.GetValidator">
            <summary>
            Gets validator.
            </summary>
            <returns>Validator.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.RemoveRecordFromDictiornary``1(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.List{FileCabinetApp.FileCabinetRecord}},``0,FileCabinetApp.FileCabinetRecord)">
            <summary>
            Removes record from dictionary by key.
            </summary>
            <typeparam name="T">Type key.</typeparam>
            <param name="dictionary">The dictionary in which to remove the element.</param>
            <param name="key">The key by which the search will be.</param>
            <param name="record">The record to be deleted.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.AddRecordToDictionary``1(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.List{FileCabinetApp.FileCabinetRecord}},``0,FileCabinetApp.FileCabinetRecord)">
            <summary>
            Adds record to dictionary by key.
            </summary>
            <typeparam name="T">Type key.</typeparam>
            <param name="dictionary">The dictionary in which to add the element.</param>
            <param name="key">The key by which the search will be.</param>
            <param name="record">The record to be added.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.Create(FileCabinetApp.DataRecord)">
            <summary>
            Creates record.
            </summary>
            <param name="dataRecord">Record data.</param>
            <returns>Record.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.AddRecordToDictionaries(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Adds a record to all dictionaries.
            </summary>
            <param name="record">The record which need to add.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetService.RemoveRecordFromDictionaries(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Removes a record to all dictionaries.
            </summary>
            <param name="record">The record which need to remove.</param>
        </member>
        <member name="T:FileCabinetApp.IFileCabinetService">
            <summary>
            Representation file cabinet service.
            </summary>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.CreateRecord(FileCabinetApp.DataRecord)">
            <summary>
            Creates new record.
            </summary>
            <param name="dataRecord">record data.</param>
            <exception cref="T:System.ArgumentNullException">Trows when <paramref name="dataRecord"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Trows when data is invalid.</exception>
            <returns>Record id.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.EditRecord(FileCabinetApp.DataRecord)">
            <summary>
            Changes record.
            </summary>
            <exception cref="T:System.ArgumentNullException">Trows when <paramref name="dataRecord"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Trows when data is invalid.</exception>
            <param name="dataRecord">Record data.</param>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindIndexById(System.Int32)">
            <summary>
            Finds index record by id.
            </summary>
            <param name="id">Identifier of the searched record.</param>
            <exception cref="T:System.ArgumentException">Throws when record not found.</exception>
            <returns>Index record.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByFirstName(System.String)">
            <summary>
            Finds record by first name.
            </summary>
            <param name="firstName">First name of the searched record.</param>
            <returns>Found records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByLastname(System.String)">
            <summary>
            Finds record by last name.
            </summary>
            <param name="lastName">Last name of the searched record.</param>
            <returns>Found records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByBirthDay(System.DateTime)">
            <summary>
            Finds record by date of birth.
            </summary>
            <param name="dateOfBirth">date of birth of the searched record.</param>
            <returns>Found records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.GetRecords">
            <summary>
            Gets all records.
            </summary>
            <returns>Records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.GetStat">
            <summary>
            Gets count of records.
            </summary>
            <returns>Count of records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.GetValidator">
            <summary>
            Gets validator.
            </summary>
            <returns>Validator.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.MakeSnapshot">
            <summary>
            Saves сurrent state.
            </summary>
            <returns>State.</returns>
        </member>
        <member name="T:FileCabinetApp.IRecordValidator">
            <summary>
            Validate record.
            </summary>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.ValidateParameters(FileCabinetApp.DataRecord)">
            <summary>
            Validate all arguments.
            </summary>
            <param name="dataRecord">Checked arguments.</param>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.ValidateFirstName(System.String)">
            <summary>
            Validate first name property.
            </summary>
            <param name="firstName">Checked argument.</param>
            <returns>
            First argument: True if successfully validated; otherwise false.
            Second argument: Error message if there is an error.
            </returns>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.ValidateLastName(System.String)">
            <summary>
            Validate last name property.
            </summary>
            <param name="lastName">Checked argument.</param>
            <returns>
            First argument: True if successfully validated; otherwise false.
            Second argument: Error message if there is an error.
            </returns>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.ValidateAccess(System.Char)">
            <summary>
            Validate access property.
            </summary>
            <param name="access">Checked argument.</param>
            <returns>
            First argument: True if successfully validated; otherwise false.
            Second argument: Error message if there is an error.
            </returns>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.ValidateDateOfBirth(System.DateTime)">
            <summary>
            Validate date of birth property.
            </summary>
            <param name="dateOfBirth">Checked argument.</param>
            <returns>
            First argument: True if successfully validated; otherwise false.
            Second argument: Error message if there is an error.
            </returns>
        </member>
        <member name="T:FileCabinetApp.Program">
            <summary>
            Interacts with API.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Program.Main(System.String[])">
            <summary>
            Point of entry.
            </summary>
            <param name="args">Property.</param>
        </member>
        <member name="M:FileCabinetApp.Program.SetSettings(System.String[])">
            <summary>
            Set settings.
            </summary>
            <param name="args">property of settings.</param>
        </member>
        <member name="M:FileCabinetApp.Program.SetFileCabinetService(System.String)">
            <summary>
            Set file cabinet service.
            </summary>
            <param name="parameter">Validation parameter.</param>
        </member>
        <member name="M:FileCabinetApp.Program.ExcuteCommand``1(System.String,System.Tuple{System.String,``0}[])">
            <summary>
            Find and return command.
            </summary>
            <typeparam name="T">Type command.</typeparam>
            <param name="commandName">Command name.</param>
            <param name="commands">Array of command.</param>
            <returns>Command.</returns>
        </member>
        <member name="M:FileCabinetApp.Program.PrintMissedCommandInfo(System.String)">
            <summary>
            Print that command missed.
            </summary>
            <param name="command">Missed command.</param>
        </member>
        <member name="M:FileCabinetApp.Program.PrintHelp(System.String)">
            <summary>
            Print help information.
            </summary>
            <param name="parameters">Parameter wich need print help information.</param>
        </member>
        <member name="M:FileCabinetApp.Program.Stat(System.String)">
            <summary>
            Prints statistics.
            </summary>
            <param name="parameters">Parameter.</param>
        </member>
        <member name="M:FileCabinetApp.Program.Create(System.String)">
            <summary>
            Create new record.
            </summary>
            <param name="parameters">Parameter.</param>
        </member>
        <member name="M:FileCabinetApp.Program.Edit(System.String)">
            <summary>
            Change record.
            </summary>
            <param name="parameters">Id record.</param>
        </member>
        <member name="M:FileCabinetApp.Program.CollectRecordData">
            <summary>
            Gathers information about a record.
            </summary>
            <returns>Record data.</returns>
        </member>
        <member name="M:FileCabinetApp.Program.ReadInput``1(System.Func{System.String,System.Tuple{System.Boolean,System.String,``0}},System.Func{``0,System.Tuple{System.Boolean,System.String}})">
            <summary>
            Reads data from the console.
            </summary>
            <typeparam name="T">Type of object being read.</typeparam>
            <param name="converter">Function that performs convertation.</param>
            <param name="validator">Function that performs validation.</param>
            <returns>Processed data.</returns>
        </member>
        <member name="M:FileCabinetApp.Program.Find(System.String)">
            <summary>
            Finds record.
            </summary>
            <param name="parameters">search property and search data.</param>
        </member>
        <member name="M:FileCabinetApp.Program.FindByFirstname(System.String)">
            <summary>
            Find record by first name.
            </summary>
            <param name="firstname">First name.</param>
            <returns>Found records.</returns>
        </member>
        <member name="M:FileCabinetApp.Program.FindByLastname(System.String)">
            <summary>
            Find record by last name.
            </summary>
            <param name="lastname">last name.</param>
            <returns>Found records.</returns>
        </member>
        <member name="M:FileCabinetApp.Program.FindByBirthDay(System.String)">
            <summary>
            Find record by date of birth.
            </summary>
            <param name="birthday">Date of birth.</param>
            <returns>Found records.</returns>
        </member>
        <member name="M:FileCabinetApp.Program.List(System.String)">
            <summary>
            Print all records.
            </summary>
            <param name="parameters">Parameter.</param>
        </member>
        <member name="M:FileCabinetApp.Program.Print(System.Collections.Generic.IReadOnlyCollection{FileCabinetApp.FileCabinetRecord})">
            <summary>
            Print records.
            </summary>
            <param name="records">Records which need print.</param>
        </member>
        <member name="M:FileCabinetApp.Program.Exit(System.String)">
            <summary>
            Exit from programm.
            </summary>
            <param name="parameters">Parameters.</param>
        </member>
    </members>
</doc>
